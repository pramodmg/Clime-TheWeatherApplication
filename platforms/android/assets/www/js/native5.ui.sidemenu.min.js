var native5 = (function($, native5) {
    native5.ui = native5.ui || {};
    var bodySelector = "";

    native5.ui.SideMenu = native5.ui.UIComponent.extend(function(options) { 

        this.element        = document.createElement('div');
        this.options        = options || {};
        this.displacement   = this.options.displacement || '147';
        this.displacement   += 'px';
        this.duration       = this.options.duration || '300';
        this.active         = false;
        bodySelector    = options.bodySelector || ".ui-page-active";
        this.header         = this.options.welcome || "<h3 style='color:white;text-align:center;padding:0px 10px;'><span>Welcome,</span><em>Guest</em></h3>";

    }).methods({
        init:function() {
            var self = this;
            this.supportedActions.push('change');
            $(this).on('change', function(evt) {
                self.toggle();
            });
            var supportsOrientationChange = "onorientationchange" in window,
        orientationEvent = supportsOrientationChange ? "orientationchange" : "resize";
    window.addEventListener(orientationEvent, function() {
        $("body").width($(window).width());
        $(bodySelector).trigger("resize");
    }, false);
    $(bodySelector).bind("webkitTransitionEnd", function(evt) {
        self.active?$(self.element).css("z-index","1"):$(self.element).css('visibility', 'hidden');
    });
        },
        render: function () {
            var self = this;
            var fragment = document.createDocumentFragment();
            fragment.appendChild(this.element);
            var container = document.createElement('div');
            var header = document.createElement('div');
            container.insertBefore(header, container.firstChild);
            $(container).append($(this.element).children('ul')[0]);
            $(this.element).empty();
            $(this.element).append(container);
            header.innerHTML = this.header;
            this.element.setAttribute("id", "smenu");	
            this.element.style.cssText = ''.concat(
                    "background-color:transparent;",
                    "height:100%;",
                    "left:0px;",
                    "top:0px;",
                    "z-index:-1;",
                    "visibility:hidden;",
                    "-webkit-transition-property:visibility;",
                    "-webkit-transition-duration:0s;",
                    "-webkit-transition-delay:"+this.duration+"ms;",
                    "-webkit-transition-timing-function:"+"linear;",
                    "width:1000px;",
                    "overflow:auto;",
                    "position:fixed;");
            document.body.appendChild(fragment);
            var elemWidth = this.displacement; 
            $(container).width(elemWidth);
            $(this.element).bind('click', function(evt) {
                self.toggle();
                evt.stopPropagation();
            });
            //this.displacement = elemWidth;
        },
        toggle: function () {
            var self = this;
            if(!self.active) {
                self.active= true;
                var styleMap = {};
                styleMap['-webkit-transition']="-webkit-transform "+self.duration+"ms";
                styleMap['-webkit-transform']="translate3d("+self.displacement+",0,0)";
                styleMap['overflow-x']="hidden !important";
                var elemStyles = {};
                elemStyles['visibility']="visible";
                elemStyles["-webkit-transition-property"]="z-index",
                    elemStyles["-webkit-transition-duration"]="0s",
                    elemStyles["-webkit-transition-delay"]=this.duration+"ms";
                elemStyles["-webkit-transition-timing-function"]="linear";
                elemStyles["z-index"]="1";
                $(self.element).css(elemStyles);
                $(bodySelector).css(styleMap);
                $("#smenu").addClass("scrollable");
                $("#smenu").bind('touchmove', function(evt) {
                    evt.preventDefault();
                    evt.stopPropagation();
                });
                $(document).bind("touchmove",self.preventScroll);
                //$(document).bind("touchmove",self.stopScroll);
                return false;
            } else {
                self.active=false;
                var elemStyles = {};
                elemStyles["-webkit-transition-property"]="visibility",
                    elemStyles["-webkit-transition-duration"]="0s",
                    elemStyles["-webkit-transition-delay"]=this.duration+"ms";
                elemStyles["-webkit-transition-timing-function"]="linear";
                //elemStyles['visibility']="visible";
                elemStyles['z-index']="-1";
                $(self.element).css(elemStyles);
                $(bodySelector).css("-webkit-transform", "translate3d(0,0,0)");
                $(document).unbind("touchmove", self.preventScroll);
                return false;
            }
        },
        preventScroll:function(e) {
            var scrollable = false;
            var items = $(e.target).parents();
            $(items).each(function(i,o) {
                if($(o).hasClass("scrollable")) {
                    scrollable = true;
                }
            });
            if(!scrollable)
                e.preventDefault();
            //evt.stopPropagation();
        },
        stopScroll:function(evt) {
            evt.preventDefault();
        },
        addItem: function(opts) {
            if(!opts) return null;

            var self = this;
            var itemText = opts.itemText || "";
            var itemClass = opts.itemClass || null;
            var itemId = opts.itemId || null;
            var itemStyle = opts.itemStyle || null;
            var itemClick = opts.itemClick || null;
            var ulItem = $(self.element).children('ul')[0];
            var content = "";

            if(itemText.indexOf("<li") !== 0) {
                content = "<li";
                if(itemClass) {
                    content+= " class = '" + itemClass + "'";
                }
                if(itemStyle) {
                    content+= " style = '" + itemStyle + "'";
                }
                if(itemId) {
                    content+= " id = '" + itemId + "'";
                }
                if(itemClick) {
                    content+= " onclick = " + itemClick;
                }
                content += ">" + itemText + "</li>";
            } else {
                content = itemText;
                if(itemClick) {
                    $(content).attr("onclick", itemClick);
                }
            }

            if(ulItem !== undefined) {
                $(ulItem).append(content);
            } else {
                $(self.element).append("<ul class='sidemenu'>"+content+"</ul>");
            }
        },

        /**
         *	This method allows users to remove menu items from the side menu. Either item index or id is necessary for this funtion to operate.
         *	@method removeItem
         *  @param [opts] {Object}
         *  @param [opts.index] {Number} Index (0 based) of `<li>` element to be deleted.
         *  @param [opts.itemId] {String} `Id` of `<li>` element to be deleted.
         *	@example
         *		menu.removeItem({index: 5});
         */
        removeItem: function(opts) {
            if(!opts) return null;

            var self = this;
            var index = opts.index || -1;
            var itemId = opts.itemId || null;

            if(index === -1 && itemId === null) return null;
            var ulItem = $(self.element).children('ul')[0];
            if(ulItem === undefined) return null;

            if(index !== -1) {
                var removeEl = $(ulItem).children()[index];
                $(removeEl).remove();
            } else {
                $("#"+itemId).remove();
            }
        }
    });
    return native5;

}($, native5||{}));
